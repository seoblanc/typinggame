(()=>{"use strict";var e={999:(e,t,n)=>{var r={};n.r(r);var o=n(669),a=n.n(o);const i=class{constructor(e){this.root=e,this.title="home",this.init()}init(){this.getWords()}async getWords(){const e=await a().get(r.default);console.log(e)}render(){const e=document.createElement("div"),t=document.createElement("h1");t.innerHTML="타자게임!";const n=document.createElement("button"),r=document.createElement("button");return n.innerHTML="home",n.addEventListener("click",(()=>location.hash="")),r.innerHTML="result",r.addEventListener("click",(()=>location.hash="result")),e.appendChild(t),e.appendChild(n),e.appendChild(r),e}},l=class{constructor(e){this.root=e,this.title="result"}cacheElement(){}render(){const e=document.createElement("div"),t=document.createElement("h1");t.innerHTML="당신의 결과는!!";const n=document.createElement("button"),r=document.createElement("button");return n.innerHTML="home",n.addEventListener("click",(()=>location.hash="")),r.innerHTML="result",r.addEventListener("click",(()=>location.hash="result")),e.appendChild(t),e.appendChild(n),e.appendChild(r),e}};(e=>{const t={"":new i(e),result:new l(e)};function n(n=""){e.innerHTML="",e.appendChild(t[n].render())}n(),window.addEventListener("hashchange",(()=>n(function(){const n=location.hash.replace("#","");if(t[n])return n;e.innerHTML=`sorry, ${n} not found`}())))})(document.getElementById("root"))}},t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={exports:{}};return e[r](o,o.exports,n),o.exports}n.m=e,n.x=e=>{},n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{var e={143:0},t=[[999,592]],r=e=>{},o=(o,a)=>{for(var i,l,[c,s,d,u]=a,h=0,p=[];h<c.length;h++)l=c[h],n.o(e,l)&&e[l]&&p.push(e[l][0]),e[l]=0;for(i in s)n.o(s,i)&&(n.m[i]=s[i]);for(d&&d(n),o&&o(a);p.length;)p.shift()();return u&&t.push.apply(t,u),r()},a=self.webpackChunktyping_game=self.webpackChunktyping_game||[];function i(){for(var r,o=0;o<t.length;o++){for(var a=t[o],i=!0,l=1;l<a.length;l++){var c=a[l];0!==e[c]&&(i=!1)}i&&(t.splice(o--,1),r=n(n.s=a[0]))}return 0===t.length&&(n.x(),n.x=e=>{}),r}a.forEach(o.bind(null,0)),a.push=o.bind(null,a.push.bind(a));var l=n.x;n.x=()=>(n.x=l||(e=>{}),(r=i)())})(),n.x()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,